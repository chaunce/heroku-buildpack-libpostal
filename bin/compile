#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

echo "-----> Begin libpostal install"

### Configure environment

set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

### Configure directories

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
INSTALL_DIR="/app/libpostal"

echo "       Using cache dir ${CACHE_DIR}"
echo "       Using build dir ${BUILD_DIR}"
echo "       Using install dir ${INSTALL_DIR}"

mkdir -p "${BUILD_DIR}"
mkdir -p "${CACHE_DIR}"

cd "${CACHE_DIR}"

# delete libpostal from cache if it's not a git repo
if [ -d "libpostal" ] && [ ! -d "libpostal/.git" ]; then
  rm -rf libpostal
fi;

# clone libpostal repo if it does not exist
if [ ! -d "libpostal" ]; then
  echo "-----> cloning libpostal into cache"
  git clone https://github.com/openvenues/libpostal
fi;

cd libpostal/

if test ! -f config.status; then
  echo "-----> compiling libpostal"
  ./bootstrap.sh
  LDFLAGS="-L${BUILD_DIR}/libpostal/lib" CFLAGS="-I${BUILD_DIR}/libpostal/include" PKG_CONFIG_PATH="${BUILD_DIR}/libpostal/lib/pkgconfig"
  ./configure --prefix=${BUILD_DIR}/libpostal --datadir=${BUILD_DIR}/libpostal/data
  make -j4
fi;

echo "-----> installing libpostal"
make install

export LD_LIBRARY_PATH="${BUILD_DIR}/libpostal/lib"
